<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>freks tips</title>
    <link>https://freks.jp/tips/tags/php/index.xml</link>
    <description>Recent content on freks tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://freks.jp/tips/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>fuelphp</title>
      <link>https://freks.jp/tips/fuelphp/</link>
      <pubDate>Tue, 11 Apr 2017 15:21:18 +0900</pubDate>
      
      <guid>https://freks.jp/tips/fuelphp/</guid>
      <description>

&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://fuelphp.com/docs/installation/instructions.html&#34;&gt;Instruction - Installation - FuelPHP Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/usr/local/bin/oil にインストールされる&lt;/p&gt;

&lt;p&gt;oilコマンドはfuelphpプロジェクト以外の場所でたたくとエラーを吐く&lt;br /&gt;
e.g. This is not a valid Fuel installation so Oil is a bit lost.&lt;/p&gt;

&lt;p&gt;$ oil create &lt;project_name&gt;&lt;br /&gt;
でプロジェクトが作れる&lt;br /&gt;
実際は git clone して composer install をしている&lt;/p&gt;

&lt;p&gt;cd &lt;project_name&gt;&lt;br /&gt;
oil server&lt;br /&gt;
で起動できる&lt;/p&gt;

&lt;h2 id=&#34;config&#34;&gt;config&lt;/h2&gt;

&lt;h3 id=&#34;環境切り替え&#34;&gt;環境切り替え&lt;/h3&gt;

&lt;p&gt;FUEL_ENVの環境変数によって読みこむconfigファイルが切り替わる&lt;br /&gt;
bootstrap.phpにコード有り&lt;/p&gt;

&lt;p&gt;$ FUEL_ENV=production oil server&lt;/p&gt;

&lt;p&gt;もしくはapacheの設定に渡す&lt;/p&gt;

&lt;h3 id=&#34;profilingをdevelopmentで有効にする&#34;&gt;profilingをdevelopmentで有効にする&lt;/h3&gt;

&lt;p&gt;app/config/config.phpに profiling のパラメータがあるがこれは全体に影響する&lt;br /&gt;
app/config/development/config.phpを作るとパラメーターが上書きされる&lt;/p&gt;

&lt;p&gt;$ vim app/config/development/config.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return array(
    &#39;profiling&#39;  =&amp;gt; true,
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;データベースのプロファイルも表示するなら&lt;/p&gt;

&lt;p&gt;$ vim app/config/development/db.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return array(
  &#39;default&#39; =&amp;gt; array(
      &#39;connection&#39;  =&amp;gt; array(
      &#39;dsn&#39;        =&amp;gt; &#39;mysql:host=localhost;dbname=fuelphp&#39;,
      &#39;username&#39;   =&amp;gt; &#39;root&#39;,
      &#39;password&#39;   =&amp;gt; &#39;root&#39;,
      ),
+    &#39;profiling&#39;  =&amp;gt; true,
  ),
);

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;オリジナルのパラメータを追加する&#34;&gt;オリジナルのパラメータを追加する&lt;/h3&gt;

&lt;p&gt;app/configディレクトリに新しくファイルを作って読み込む&lt;/p&gt;

&lt;p&gt;$ vim app/config/original.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return [
    &#39;one&#39; =&amp;gt; &#39;sample&#39;
];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;読み込むには&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Config::load(&#39;original&#39;, true);
$one = Config::get(&#39;original.one&#39;);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>sendgrid php</title>
      <link>https://freks.jp/tips/sendgrid-php/</link>
      <pubDate>Sun, 12 Mar 2017 14:10:31 +0900</pubDate>
      
      <guid>https://freks.jp/tips/sendgrid-php/</guid>
      <description>

&lt;p&gt;refference: &lt;a href=&#34;https://github.com/sendgrid/sendgrid-php&#34;&gt;https://github.com/sendgrid/sendgrid-php&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;

&lt;p&gt;$ composer install sendgrid/sendgrid&lt;/p&gt;

&lt;h1 id=&#34;set-api-key&#34;&gt;set api key&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;export SENDGRID_API_KEY=&#39;YOUR_API_KEY&#39;&amp;quot; &amp;gt; sendgrid.env
echo &amp;quot;sendgrid.env&amp;quot; &amp;gt;&amp;gt; .gitignore
source ./sendgrid.env
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;sample-code&#34;&gt;sample code&lt;/h1&gt;

&lt;p&gt;see: &lt;a href=&#34;https://github.com/sendgrid/sendgrid-php/blob/master/examples/contactdb/contactdb.php&#34;&gt;https://github.com/sendgrid/sendgrid-php/blob/master/examples/contactdb/contactdb.php&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
require &#39;vendor/autoload.php&#39;;

$apiKey = getenv(&#39;SENDGRID_API_KEY&#39;);
$sg = new \SendGrid($apiKey);

$response = $sg-&amp;gt;client-&amp;gt;contactdb()-&amp;gt;lists()-&amp;gt;get();
echo &#39;status code: &#39;, $response-&amp;gt;statusCode(), PHP_EOL;
echo &#39;======body======&#39;,PHP_EOL;
var_dump($response-&amp;gt;body());
echo &#39;======headers======&#39;,PHP_EOL;
var_dump($response-&amp;gt;headers());
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>eccube3</title>
      <link>https://freks.jp/tips/eccube3/</link>
      <pubDate>Mon, 16 Jan 2017 16:34:30 +0900</pubDate>
      
      <guid>https://freks.jp/tips/eccube3/</guid>
      <description>

&lt;h4 id=&#34;debug-mode&#34;&gt;debug mode&lt;/h4&gt;

&lt;p&gt;デバッグモード用のURLが用意されている&lt;br /&gt;
index_dev.phpを入れるとデバッグモード&lt;br /&gt;
&lt;a href=&#34;http://localhost/index_dev.php/sample/aaa&#34;&gt;http://localhost/index_dev.php/sample/aaa&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;plugin&#34;&gt;plugin&lt;/h4&gt;

&lt;p&gt;Customizeプラグインを作る場合&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Customize/
├── config.yml
├── Controller
│   ├── ConfigController.php
│   └── CustomizeController.php
├── event.yml
├── Form
│   └── Type
│       └── CustomizeConfigType.php
├── CustomizeEvent.php
├── LICENSE
├── PluginManager.php
├── Resource
│   └── template
│       ├── admin
│       │   └── config.twig
│       └── index.twig
└── ServiceProvider
    └── CustomizeServiceProvider.php
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;config.yml&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プラグインの定義、ServiceProviderやEventの登録&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ServiceProviderディレクトリ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メインロジック、ルーティングの設定やFormのセットなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;event.yml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フックポイントとEvent methodをつなげる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CustomizeEvent.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;config.ymlにevent.ymlとつながるクラス名をセット&lt;br /&gt;
event.ymlとつなぐmethodを用意&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Controllerディレクトリ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コントローラーを設置&lt;/p&gt;

&lt;h4 id=&#34;clear-cache&#34;&gt;clear cache&lt;/h4&gt;

&lt;p&gt;キャッシュファイル削除&lt;br /&gt;
$ php app/console cache:clear&lt;/p&gt;

&lt;p&gt;セッション情報も含めて削除&lt;br /&gt;
$ php app/console cache:clear &amp;ndash;all&lt;/p&gt;

&lt;h4 id=&#34;doctrine&#34;&gt;doctrine&lt;/h4&gt;

&lt;p&gt;check and update&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/doctrine orm:schema-tool:update --dump-sql
./vendor/bin/doctrine orm:schema-tool:update --force
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;log&#34;&gt;log&lt;/h4&gt;

&lt;p&gt;see &lt;a href=&#34;http://ec-cube.github.io/guideline_log&#34;&gt;ログ出力設定 | EC-CUBE 開発ドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;formにエラーを表示する&#34;&gt;Formにエラーを表示する&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$form-&amp;gt;get(&#39;form_item&#39;)-&amp;gt;addError(new FormError(&#39;error message&#39;));
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>php</title>
      <link>https://freks.jp/tips/php/</link>
      <pubDate>Mon, 19 Dec 2016 15:16:16 +0900</pubDate>
      
      <guid>https://freks.jp/tips/php/</guid>
      <description>

&lt;h4 id=&#34;ワンライナーでphp-iniの場所を調べる&#34;&gt;ワンライナーでphp.iniの場所を調べる&lt;/h4&gt;

&lt;p&gt;$ php -r &amp;ldquo;phpinfo();&amp;rdquo; | grep php.ini&lt;/p&gt;

&lt;h4 id=&#34;datetime&#34;&gt;DateTime&lt;/h4&gt;

&lt;p&gt;昨日、明日、来月を表示&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$yesterday = (new DateTime())-&amp;gt;sub(new DateInterval(&#39;P1D&#39;))-&amp;gt;setTime(0,0,0);
echo $yesterday-&amp;gt;format(&#39;Y-m-d H:i:s&#39;), PHP_EOL;
$tomorrow = (new DateTime())-&amp;gt;add(new DateInterval(&#39;P1D&#39;))-&amp;gt;setTime(0,0,0);
echo $tomorrow-&amp;gt;format(&#39;Y-m-d H:i:s&#39;), PHP_EOL;
$nextMonth = (new DateTime())-&amp;gt;add(new DateInterval(&#39;P1M&#39;))-&amp;gt;setTime(0,0,0);
echo $nextMonth-&amp;gt;format(&#39;Y-m-d H:i:s&#39;);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>silex</title>
      <link>https://freks.jp/tips/silex/</link>
      <pubDate>Wed, 14 Dec 2016 13:54:42 +0900</pubDate>
      
      <guid>https://freks.jp/tips/silex/</guid>
      <description>

&lt;h3 id=&#34;starter&#34;&gt;starter&lt;/h3&gt;

&lt;p&gt;see &lt;a href=&#34;http://silex.sensiolabs.org/doc/master/usage.html&#34;&gt;Usage - Documentation - Silex - The PHP micro-framework based on the Symfony Components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;$ composer require silex/silex:~2.0&lt;/p&gt;

&lt;p&gt;サンプルコードを用意&lt;br /&gt;
$ mkdir src&lt;br /&gt;
$ cd src&lt;br /&gt;
$ vim index.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

require_once __DIR__.&#39;/../vendor/autoload.php&#39;;

$app = new Silex\Application();

$app-&amp;gt;get(&#39;/hello/{name}&#39;, function ($name) use ($app) {
    return &#39;Hello &#39;.$app-&amp;gt;escape($name);
});

$app-&amp;gt;run();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;起動して確認する&lt;br /&gt;
$ cd ..&lt;br /&gt;
$ php -S localhost:8080 -t src&lt;br /&gt;
access &lt;a href=&#34;http://localhost:8080/hello/taro&#34;&gt;http://localhost:8080/hello/taro&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>symfony</title>
      <link>https://freks.jp/tips/symfony/</link>
      <pubDate>Wed, 14 Dec 2016 11:25:54 +0900</pubDate>
      
      <guid>https://freks.jp/tips/symfony/</guid>
      <description>

&lt;h3 id=&#34;starter&#34;&gt;starter&lt;/h3&gt;

&lt;p&gt;see &lt;a href=&#34;http://symfony.com/doc/2.8/setup.html&#34;&gt;Installing &amp;amp; Setting up the Symfony Framework (2.8)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Symfonyのデモ付き一式ディストリビューションインストール&lt;br /&gt;
$ composer create-project symfony/framework-standard-edition my_project_name &amp;ldquo;2.8.*&amp;rdquo;&lt;/p&gt;

&lt;p&gt;環境チェック&lt;br /&gt;
$ php app/check.php
or&lt;br /&gt;
access &lt;a href=&#34;http://localhost:8000/config.php&#34;&gt;http://localhost:8000/config.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使えるservicesを確認&lt;br /&gt;
php app/console debug:container&lt;/p&gt;

&lt;p&gt;起動&lt;br /&gt;
$ php app/console server:run&lt;/p&gt;

&lt;p&gt;コントローラーをつくってhtmlを返す&lt;br /&gt;
ルーティングはアノテーションで設定できる&lt;br /&gt;
phpのファイルはsrc以下に保存&lt;br /&gt;
$ vim src/AppBundle/Controller/LuckyController.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace AppBundle\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Response;

class LuckyController
{
    /**
     * @Route(&amp;quot;/hey/yo&amp;quot;)
     */
    public function hoo()
    {
        return new Response(
            &#39;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;hey&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;
        );
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Twigテンプレートを返す&lt;br /&gt;
phpでない設定ファイルやテンプレートはapp以下に保存&lt;br /&gt;
$ vim src/AppBundle/Controller/LuckyController.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace AppBundle\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;

class LuckyController extends Controller
{
    /**
     * @Route(&amp;quot;/lucky/number&amp;quot;)
     */
    public function numberAction()
    {
        $number = mt_rand(0, 100);

        return $this-&amp;gt;render(&#39;lucky/number.html.twig&#39;, array(
            &#39;number&#39; =&amp;gt; $number,
        ));
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ vim app/Resources/views/lucky/number.html.twig&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Your lucky number is {{ number }}&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>composer</title>
      <link>https://freks.jp/tips/composer/</link>
      <pubDate>Mon, 12 Dec 2016 15:36:12 +0900</pubDate>
      
      <guid>https://freks.jp/tips/composer/</guid>
      <description>

&lt;h4 id=&#34;バージョンを指定してパッケージをインストールする&#34;&gt;バージョンを指定してパッケージをインストールする&lt;/h4&gt;

&lt;p&gt;Symfony2をインストール&lt;/p&gt;

&lt;p&gt;$ composer require &amp;ldquo;symfony/symfony: 2.*&amp;rdquo;&lt;/p&gt;

&lt;p&gt;see &lt;a href=&#34;http://tech.quartetcom.co.jp/2015/01/19/composer-practices/&#34;&gt;[初心者向け] composerのバージョン指定方法 | QUARTETCOM TECH BLOG&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cakephp</title>
      <link>https://freks.jp/tips/cakephp/</link>
      <pubDate>Fri, 25 Nov 2016 16:54:03 +0900</pubDate>
      
      <guid>https://freks.jp/tips/cakephp/</guid>
      <description>&lt;p&gt;モデルのデータベースアクセスをSQLで確認する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$data = $this-&amp;gt;SampleModel-&amp;gt;find(&#39;all);
$sqlLog = $this-&amp;gt;SampleModel-&amp;gt;getDataSource()-&amp;gt;getLog(false, false);
debug($sqlLog);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;json返す型&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function getJson()
{
    $this-&amp;gt;autoRender = false;
    if(!$this-&amp;gt;request-&amp;gt;is(&#39;ajax&#39;)) {
      throw new BadRequestException();
    }

    $result = &#39;NG&#39;;
    $data = $this-&amp;gt;request-&amp;gt;data;
    if (strlen(strlen($data[&#39;id&#39;]) !== 0) {
        // do something
        $result = &#39;OK&#39;;
    }
    echo json_encode(compact(&#39;result&#39;));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;csvダウンロード型&lt;br /&gt;
これだと中身が多いとメモリを消費する&lt;br /&gt;
中身が多い場合は小分けにファイル保存して、ファイルダウンロードする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function download($uid)
{
    $this-&amp;gt;autoRender = false;
    $this-&amp;gt;response-&amp;gt;type(&#39;csv&#39;);

    $fileName = &#39;1.csv&#39;;
    $this-&amp;gt;response-&amp;gt;download($fileName);

    $str = &amp;quot;sample, sample2&amp;quot;;
    $str .= &amp;quot;1, 2&amp;quot;;

    $str = mb_convert_encoding($str, &#39;SJIS-win&#39;, &#39;utf8&#39;);
    $this-&amp;gt;response-&amp;gt;body($str);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>