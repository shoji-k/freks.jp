<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>freks tips</title>
    <link>https://freks.jp/tips/tags/aws/index.xml</link>
    <description>Recent content on freks tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://freks.jp/tips/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>awscli</title>
      <link>https://freks.jp/tips/awscli/</link>
      <pubDate>Thu, 11 May 2017 15:18:08 +0900</pubDate>
      
      <guid>https://freks.jp/tips/awscli/</guid>
      <description>

&lt;h2 id=&#34;初期設定&#34;&gt;初期設定&lt;/h2&gt;

&lt;p&gt;AWS IAM Managerでアカウントを用意、Access keyを作成する&lt;br /&gt;
作ったアカウントに権限を与える&lt;br /&gt;
groupでAdministratorAccessを与えると全部できそう&lt;/p&gt;

&lt;p&gt;$ aws configure&lt;/p&gt;

&lt;h2 id=&#34;elbに登録されたssl証明書一覧を表示する&#34;&gt;ELBに登録されたSSL証明書一覧を表示する&lt;/h2&gt;

&lt;p&gt;$ aws iam list-server-certificates&lt;/p&gt;

&lt;h2 id=&#34;elbに登録されたssl証明書を削除する&#34;&gt;ELBに登録されたSSL証明書を削除する&lt;/h2&gt;

&lt;p&gt;$ aws iam delete-server-certificate &amp;ndash;server-certificate-name (証明書の名前）&lt;/p&gt;

&lt;h2 id=&#34;ssl証明書アップロード&#34;&gt;SSL証明書アップロード&lt;/h2&gt;

&lt;p&gt;管理画面GUIからだとエラーになる&lt;/p&gt;

&lt;p&gt;$ aws iam upload-server-certificate &amp;ndash;server-certificate-name your-certificate-name &amp;ndash;certificate-body file://Certificate.pem &amp;ndash;certificate-chain file://CertificateChain.pem &amp;ndash;private-key file://PrivateKey.pem&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/IAM/latest/UserGuide/id_credentials_server-certs.html&#34;&gt;サーバー証明書の使用 - AWS Identity and Access Management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;EC2 &amp;gt; ELBの設定で、アップロードしたSSL証明書を選べば反映させる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>rsync</title>
      <link>https://freks.jp/tips/rsync/</link>
      <pubDate>Sat, 08 Apr 2017 13:39:07 +0900</pubDate>
      
      <guid>https://freks.jp/tips/rsync/</guid>
      <description>

&lt;h1 id=&#34;backup-remote-files&#34;&gt;backup remote files&lt;/h1&gt;

&lt;p&gt;$ rsync &amp;ndash;exclude=&amp;ldquo;/src/app/cache&amp;rdquo; &amp;ndash;exclude=&amp;ldquo;.git&amp;rdquo; &amp;ndash;exclude=&amp;ldquo;.gitignore&amp;rdquo; -rltuvz sample:/var/www/html ./&lt;/p&gt;

&lt;p&gt;-r recursive&lt;br /&gt;
-l copy symlinks&lt;br /&gt;
-t preserve modification time&lt;br /&gt;
-u skip file that are newer&lt;br /&gt;
-v verbose&lt;br /&gt;
-z compress&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>amazon ecs</title>
      <link>https://freks.jp/tips/amazon-ecs/</link>
      <pubDate>Fri, 10 Mar 2017 14:29:18 +0900</pubDate>
      
      <guid>https://freks.jp/tips/amazon-ecs/</guid>
      <description>

&lt;p&gt;see &lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/Welcome.html&#34;&gt;Amazon EC2 Container Service とは&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;クラスター&#34;&gt;クラスター&lt;/h1&gt;

&lt;p&gt;一番大枠&lt;br /&gt;
中に立ち上げるEC2インスタンスの数を決められる&lt;/p&gt;

&lt;h1 id=&#34;コンテナインスタンス&#34;&gt;コンテナインスタンス&lt;/h1&gt;

&lt;p&gt;EC2インスタンス&lt;br /&gt;
dockerとecs agent入りの&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/ecs-optimized_AMI.html?shortFooter=true&#34;&gt;AMI&lt;/a&gt;を使う&lt;/p&gt;

&lt;p&gt;EC2を自分で用意してクラスターに参加させることもできる&lt;/p&gt;

&lt;h1 id=&#34;タスク定義&#34;&gt;タスク定義&lt;/h1&gt;

&lt;p&gt;Docker imageの指定&lt;br /&gt;
CPU、メモリの指定&lt;/p&gt;

&lt;p&gt;複数のコンテナを指定できる&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;
同じインスタンスでどのプロセスを一緒に実行する必要があるか、各コンポーネントをどのようにスケーリングするかを検討します
&lt;/blockquote&gt;
&lt;small&gt;&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/application_architecture.html&#34;&gt;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/application_architecture.html&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h1 id=&#34;サービス&#34;&gt;サービス&lt;/h1&gt;

&lt;p&gt;&lt;blockquote&gt;
タスク定義の指定した数 (&amp;ldquo;必要数&amp;rdquo;) のインスタンスを ECS クラスターで同時に実行して維持できます。
&lt;/blockquote&gt;
&lt;small&gt;
&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/ecs_services.html?shortFooter=true&#34;&gt;http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/ecs_services.html?shortFooter=true&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タスクが停止したらタスクを強制終了、再度開始する&lt;/li&gt;
&lt;li&gt;ロードバランサーの指定&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;composeを使う&#34;&gt;composeを使う&lt;/h1&gt;

&lt;p&gt;ecs-cli をインストールして使う&lt;/p&gt;

&lt;p&gt;see [&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/ECS_CLI_tutorial.html&#34;&gt;https://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/ECS_CLI_tutorial.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;ecs-cliの設定&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ecs-cli configure --region us-west-2 --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY --cluster ecs-cli-demo
INFO[0000] Saved ECS CLI configuration for cluster (ecs-cli-demo)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;２つインスタンスを作る&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ecs-cli up --keypair id_rsa --capability-iam --size 2 --instance-type t2.medium
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;keypairは指定したリージョン内のEC2のキーペアを指定する&lt;br /&gt;
権限がいくつか必要、IAM:USER:ROLEとECS&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>amazon ecr</title>
      <link>https://freks.jp/tips/amazon-ecr/</link>
      <pubDate>Wed, 08 Mar 2017 15:00:14 +0900</pubDate>
      
      <guid>https://freks.jp/tips/amazon-ecr/</guid>
      <description>

&lt;h1 id=&#34;for-the-first-time&#34;&gt;for the first time&lt;/h1&gt;

&lt;p&gt;see &lt;a href=&#34;https://console.aws.amazon.com/ecs/home?region=us-east-1#/firstRun&#34;&gt;Amazon EC2 Container Service First Run&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;install-aws-client&#34;&gt;install aws client&lt;/h1&gt;

&lt;p&gt;curl &amp;ldquo;&lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&amp;quot;&#34;&gt;https://bootstrap.pypa.io/get-pip.py&amp;quot;&lt;/a&gt; -o &amp;ldquo;get-pip.py&amp;rdquo;&lt;br /&gt;
sudo python get-pip.py&lt;br /&gt;
rm get-pip.py&lt;br /&gt;
sudo pip install awscli&lt;/p&gt;

&lt;h2 id=&#34;configure-aws-client&#34;&gt;configure aws client&lt;/h2&gt;

&lt;h3 id=&#34;prepare-aws-key&#34;&gt;prepare aws key&lt;/h3&gt;

&lt;p&gt;create IAM role and prepare access key and secret key&lt;/p&gt;

&lt;h3 id=&#34;set-keys-to-awsclient&#34;&gt;set keys to awsclient&lt;/h3&gt;

&lt;p&gt;$ aws configure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AWS Access Key ID [None]: xxxxxxxxxxxxxxxxxxxx
AWS Secret Access Key [None]: ........................................
Default region name [None]: us-east-1
Default output format [None]:
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;create-ecr&#34;&gt;create ecr&lt;/h1&gt;

&lt;p&gt;region: us-east-1&lt;/p&gt;

&lt;p&gt;access &lt;a href=&#34;https://console.aws.amazon.com/ecs/home?region=us-east-1#/repositories&#34;&gt;https://console.aws.amazon.com/ecs/home?region=us-east-1#/repositories&lt;/a&gt;&lt;br /&gt;
and create a repository&lt;/p&gt;

&lt;h1 id=&#34;push-a-docker-image&#34;&gt;push a docker image&lt;/h1&gt;

&lt;h2 id=&#34;connect-local-to-aws&#34;&gt;connect local to aws&lt;/h2&gt;

&lt;p&gt;retrieve a docker login command&lt;br /&gt;
$ aws ecr get-login &amp;ndash;region us-east-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker login -u AWS -p xxxxxx -e none https://xxxxxxx.dkr.ecr.us-east-1.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;run the docker login above&lt;/p&gt;

&lt;h2 id=&#34;prepare-docker-image&#34;&gt;prepare docker image&lt;/h2&gt;

&lt;h1 id=&#34;docker-build-t-sample&#34;&gt;docker build -t sample .&lt;/h1&gt;

&lt;h2 id=&#34;tag-a-docker-image&#34;&gt;tag a docker image&lt;/h2&gt;

&lt;p&gt;make tag name same as ecr name&lt;br /&gt;
e.g. xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository&lt;/p&gt;

&lt;p&gt;docker tag sample xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository:image-tag-sample&lt;/p&gt;

&lt;h2 id=&#34;upload-images&#34;&gt;upload images&lt;/h2&gt;

&lt;p&gt;docker push xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository:image-tag-sample&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>