<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>freks tips</title>
    <link>https://freks.jp/tips/categories/engineer/index.xml</link>
    <description>Recent content on freks tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://freks.jp/tips/categories/engineer/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>amazon ecr</title>
      <link>https://freks.jp/tips/amazon-ecr/</link>
      <pubDate>Wed, 08 Mar 2017 15:00:14 +0900</pubDate>
      
      <guid>https://freks.jp/tips/amazon-ecr/</guid>
      <description>

&lt;h1 id=&#34;for-the-first-time&#34;&gt;for the first time&lt;/h1&gt;

&lt;p&gt;see &lt;a href=&#34;https://console.aws.amazon.com/ecs/home?region=us-east-1#/firstRun&#34;&gt;Amazon EC2 Container Service First Run&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;install-aws-client&#34;&gt;install aws client&lt;/h1&gt;

&lt;p&gt;curl &amp;ldquo;&lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&amp;quot;&#34;&gt;https://bootstrap.pypa.io/get-pip.py&amp;quot;&lt;/a&gt; -o &amp;ldquo;get-pip.py&amp;rdquo;&lt;br /&gt;
sudo python get-pip.py&lt;br /&gt;
rm get-pip.py&lt;br /&gt;
sudo pip install awscli&lt;/p&gt;

&lt;h2 id=&#34;configure-aws-client&#34;&gt;configure aws client&lt;/h2&gt;

&lt;h3 id=&#34;prepare-aws-key&#34;&gt;prepare aws key&lt;/h3&gt;

&lt;p&gt;create IAM role and prepare access key and secret key&lt;/p&gt;

&lt;h3 id=&#34;set-keys-to-awsclient&#34;&gt;set keys to awsclient&lt;/h3&gt;

&lt;p&gt;$ aws configure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AWS Access Key ID [None]: xxxxxxxxxxxxxxxxxxxx
AWS Secret Access Key [None]: ........................................
Default region name [None]: us-east-1
Default output format [None]:
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;create-ecr&#34;&gt;create ecr&lt;/h1&gt;

&lt;p&gt;region: us-east-1&lt;/p&gt;

&lt;p&gt;access &lt;a href=&#34;https://console.aws.amazon.com/ecs/home?region=us-east-1#/repositories&#34;&gt;https://console.aws.amazon.com/ecs/home?region=us-east-1#/repositories&lt;/a&gt;&lt;br /&gt;
and create a repository&lt;/p&gt;

&lt;h1 id=&#34;push-a-docker-image&#34;&gt;push a docker image&lt;/h1&gt;

&lt;h2 id=&#34;connect-local-to-aws&#34;&gt;connect local to aws&lt;/h2&gt;

&lt;p&gt;retrieve a docker login command&lt;br /&gt;
$ aws ecr get-login &amp;ndash;region us-east-1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker login -u AWS -p xxxxxx -e none https://xxxxxxx.dkr.ecr.us-east-1.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;run the docker login above&lt;/p&gt;

&lt;h2 id=&#34;prepare-docker-image&#34;&gt;prepare docker image&lt;/h2&gt;

&lt;h1 id=&#34;docker-build-t-sample&#34;&gt;docker build -t sample .&lt;/h1&gt;

&lt;h2 id=&#34;tag-a-docker-image&#34;&gt;tag a docker image&lt;/h2&gt;

&lt;p&gt;make tag name same as ecr name&lt;br /&gt;
e.g. xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository&lt;/p&gt;

&lt;p&gt;docker tag sample xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository:image-tag-sample&lt;/p&gt;

&lt;h2 id=&#34;upload-images&#34;&gt;upload images&lt;/h2&gt;

&lt;p&gt;docker push xxxxxxx.dkr.ecr.us-east-1.amazonaws.com/freks-repository:image-tag-sample&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker machine</title>
      <link>https://freks.jp/tips/docker-machine/</link>
      <pubDate>Wed, 22 Feb 2017 12:01:25 +0900</pubDate>
      
      <guid>https://freks.jp/tips/docker-machine/</guid>
      <description>

&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;

&lt;p&gt;see &lt;a href=&#34;https://docs.docker.com/machine/install-machine/&#34;&gt;Install Docker Machine - Docker&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;commands&#34;&gt;commands&lt;/h1&gt;

&lt;p&gt;managerのホスト名のvirtual machineを用意&lt;br /&gt;
$ docker-machine create &amp;ndash;driver virtualbox manager&lt;/p&gt;

&lt;p&gt;virtual machine一覧&lt;br /&gt;
active * はシェルがつながっているもの&lt;/p&gt;

&lt;p&gt;$ docker-machine ls&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER    ERRORS
manager   *        virtualbox   Running   tcp://192.168.99.100:2376           v1.13.1   
worker    -        virtualbox   Running   tcp://192.168.99.101:2376           v1.13.1  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IPを表示&lt;br /&gt;
$ docker-machine ip manager&lt;/p&gt;

&lt;p&gt;環境変数を表示&lt;br /&gt;
$ docker-machine env manager&lt;/p&gt;

&lt;p&gt;手元のシェルとvirutal machineのシェルをつなぐ&lt;br /&gt;
$ eval $(docker-machine env manager)&lt;/p&gt;

&lt;p&gt;managerへsshログイン&lt;br /&gt;
$ docker-machine ssh manager&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/
 _                 _   ____     _            _
| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
| &#39;_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ &#39;__|
| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &amp;lt;  __/ |
|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
Boot2Docker version 1.13.1, build HEAD : b7f6033 - Wed Feb  8 20:31:48 UTC 2017
Docker version 1.13.1, build 092cba3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;initialize swarm&lt;br /&gt;
docker@manager:~$ docker swarm init &amp;ndash;advertise-addr 192.168.99.100&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Swarm initialized: current node (vr7gm59os0kbgeou8oickuv3y) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-69gbc5d50la1ta5mtk67lrno5phgoqq4ebaztnf4h91dj6era3-71p3dn14eu6zhumv0p254r3xy \
    192.168.99.100:2377
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;workerにsshログイン、swarn init後のコマンドを実行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker@worker:~$  docker swarm join \
&amp;gt;     --token SWMTKN-1-69gbc5d50la1ta5mtk67lrno5phgoqq4ebaztnf4h91dj6era3-71p3dn14eu6zhumv0p254r3xy \
&amp;gt;     192.168.99.100:2377
This node joined a swarm as a worker.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nodeを表示&lt;/p&gt;

&lt;p&gt;docker@manager:~$ docker node ls&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS
vr7gm59os0kbgeou8oickuv3y *  manager   Ready   Active        Leader
y2y9i98fd78f5qzvi3o5kuj18    worker    Ready   Active  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;prepare docker-stack.yml and deploy&lt;/p&gt;

&lt;p&gt;docker@manager:~$ docker stack deploy &amp;ndash;compose-file docker-stack.yml vote&lt;/p&gt;

&lt;p&gt;確認する&lt;br /&gt;
docker@manager:~$ docker stack services vote&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>optipng</title>
      <link>https://freks.jp/tips/optipng/</link>
      <pubDate>Sat, 18 Feb 2017 14:33:16 +0900</pubDate>
      
      <guid>https://freks.jp/tips/optipng/</guid>
      <description>

&lt;p&gt;optimize png file&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;install&lt;/h2&gt;

&lt;h3 id=&#34;centos7&#34;&gt;centos7&lt;/h3&gt;

&lt;p&gt;$ sudo yum install optipng&lt;/p&gt;

&lt;h2 id=&#34;how-to-use&#34;&gt;how to use&lt;/h2&gt;

&lt;p&gt;$ optipng -o7 sample.png&lt;/p&gt;

&lt;p&gt;with backup&lt;/p&gt;

&lt;p&gt;$ optipng -o7 -keep sample.png&lt;/p&gt;

&lt;p&gt;then create sample.png.bak too&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fluentd</title>
      <link>https://freks.jp/tips/fluentd/</link>
      <pubDate>Mon, 13 Feb 2017 15:33:20 +0900</pubDate>
      
      <guid>https://freks.jp/tips/fluentd/</guid>
      <description>

&lt;h3 id=&#34;prerequirement&#34;&gt;prerequirement&lt;/h3&gt;

&lt;p&gt;see &lt;a href=&#34;http://docs.fluentd.org/v0.12/articles/before-install&#34;&gt;Before Installing Fluentd | Fluentd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;コマンドが扱えるファイルの数を確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ulimit -n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1024だと足りないので&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo /etc/security/limits.conf

root soft nofile 65536
root hard nofile 65536
* soft nofile 65536
* hard nofile 65536
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を追記、再起動（VPSだとログアウト、ログインで変更された）&lt;/p&gt;

&lt;p&gt;kernel parameterを変えるのは他に影響が出そうだったのでスキップ&lt;/p&gt;

&lt;h3 id=&#34;install&#34;&gt;install&lt;/h3&gt;

&lt;h4 id=&#34;ubuntu-14-04-trusty&#34;&gt;ubuntu 14.04 trusty&lt;/h4&gt;

&lt;p&gt;register td-agent repository, install td-agent and boot td-agent deamon&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -L https://toolbelt.treasuredata.com/sh/install-ubuntu-trusty-td-agent2.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test&#34;&gt;test&lt;/h3&gt;

&lt;p&gt;throw one request to td-agent&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST -d &#39;json={&amp;quot;json&amp;quot;:&amp;quot;message&amp;quot;}&#39; http://localhost:8888/debug.test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;confirm log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /var/log/td-agent/td-agent.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;service&#34;&gt;service&lt;/h3&gt;

&lt;p&gt;start, stop, etc..&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo /etc/init.d/td-agent start
$ sudo /etc/init.d/td-agent stop
$ sudo /etc/init.d/td-agent restart
$ sudo /etc/init.d/td-agent status
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-processes&#34;&gt;check processes&lt;/h3&gt;

&lt;p&gt;プロセスは２つ起動しているのが正しい&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ps aufx | grep td-agent
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;directive&#34;&gt;directive&lt;/h3&gt;

&lt;p&gt;設定ファイル&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/td-agent/td-agent.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;system&#34;&gt;&amp;lt;system&amp;gt;&lt;/h4&gt;

&lt;p&gt;Fluentdのコアの動作を設定&lt;/p&gt;

&lt;h4 id=&#34;source&#34;&gt;&amp;lt;source&amp;gt;&lt;/h4&gt;

&lt;p&gt;ログの入力元を設定&lt;/p&gt;

&lt;h4 id=&#34;match&#34;&gt;&amp;lt;match&amp;gt;&lt;/h4&gt;

&lt;p&gt;ログの出力先を設定&lt;/p&gt;

&lt;h4 id=&#34;include&#34;&gt;&amp;lt;include&amp;gt;&lt;/h4&gt;

&lt;p&gt;外部ファイルの設定を読み込む&lt;/p&gt;

&lt;h3 id=&#34;rootize&#34;&gt;rootize&lt;/h3&gt;

&lt;p&gt;エラーログなど権限不足で読めないので、td-agentをrootで起動する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/init.d/td-agent

TD_AGENT_USER=root
TD_AGENT_GROUP=root

$ service td-agent restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example-1&#34;&gt;example 1&lt;/h3&gt;

&lt;p&gt;nginx access logをtd-agent.logに出力する&lt;/p&gt;

&lt;p&gt;$ vim /etc/td-agent/td-agent.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;match debug.**&amp;gt;
  @type stdout
&amp;lt;/match&amp;gt;

&amp;lt;source&amp;gt;
  @type tail
  path /var/log/nginx/sample-access.log
  tag debug.sample-access
  pos_file /var/log/td-agent/sample-access.log.pos
  format /^(?&amp;lt;remote&amp;gt;[^ ]*) (?&amp;lt;host&amp;gt;[^ ]*) (?&amp;lt;user&amp;gt;[^ ]*) \[(?&amp;lt;time&amp;gt;[^\]]*)\] &amp;quot;(?&amp;lt;method&amp;gt;\S+)(?: +(?&amp;lt;path&amp;gt;[^ ]*) +\S*)?&amp;quot; (?&amp;lt;code&amp;gt;[^ ]*) (?&amp;lt;size&amp;gt;[^ ]*)(?: &amp;quot;(?&amp;lt;referer&amp;gt;[^\&amp;quot;]*)&amp;quot; &amp;quot;(?&amp;lt;agent&amp;gt;[^\&amp;quot;]*)&amp;quot; &amp;quot;(?&amp;lt;forwarder&amp;gt;[^\&amp;quot;]*)&amp;quot;)?/
  time_format %d/%b/%Y:%H:%M:%S %z
&amp;lt;/source&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ tail /var/log/td-agent/td-agent.log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2017-02-15 21:26:44 +0900 debug.sample-access: {&amp;quot;remote&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;host&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;metho
6_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&amp;quot;,&amp;quot;forwarder&amp;quot;:&amp;quot;-&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>centos7</title>
      <link>https://freks.jp/tips/centos7/</link>
      <pubDate>Sun, 05 Feb 2017 13:00:30 +0900</pubDate>
      
      <guid>https://freks.jp/tips/centos7/</guid>
      <description>

&lt;h4 id=&#34;centos-update&#34;&gt;centos update&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;firewalld&#34;&gt;firewalld&lt;/h4&gt;

&lt;p&gt;reload firewalld&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;open http port of firewall&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --add-service=http --zone=public --permanent
$ sudo firewall-cmd --add-service=https --zone=public --permanent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;open and close port&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --add-port=30080/tcp --zone=public --permanent
$ sudo firewall-cmd --remove-port=30080/tcp --zone=public --permanent
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;yum&#34;&gt;yum&lt;/h4&gt;

&lt;p&gt;yum install時に使われるrepositoryは&lt;code&gt;/etc/yum.repos.d/&lt;/code&gt;内にあって、enable=1のもの&lt;br /&gt;
&lt;code&gt;enable=0&lt;/code&gt;のものを指定するには&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install --enablerepo=epel certbot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yumでインストールしたパッケージ一覧&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum list installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アップデート&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install certbot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;削除&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum remove certbot
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;rpm&#34;&gt;rpm&lt;/h4&gt;

&lt;h5 id=&#34;install&#34;&gt;install&lt;/h5&gt;

&lt;p&gt;$ rpm -ivh sample.rpm&lt;/p&gt;

&lt;h4 id=&#34;show-places&#34;&gt;show places&lt;/h4&gt;

&lt;p&gt;$ rpm -ql sample&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://freks.jp/tips/nginx/</link>
      <pubDate>Sun, 05 Feb 2017 10:43:20 +0900</pubDate>
      
      <guid>https://freks.jp/tips/nginx/</guid>
      <description>

&lt;h4 id=&#34;config-test&#34;&gt;config test&lt;/h4&gt;

&lt;p&gt;centos 7&lt;br /&gt;
$ sudo nginx -t&lt;/p&gt;

&lt;h4 id=&#34;initial&#34;&gt;initial&lt;/h4&gt;

&lt;p&gt;$ vim /etc/nginx/conf.d/default.conf&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add server_tokens: off to html {}&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;プロキシ設定&#34;&gt;プロキシ設定&lt;/h4&gt;

&lt;p&gt;$ vim /etc/nginx/conf.d/default.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;upstream backend {
    server 127.0.0.1:8080;
}

server {
    listen       80;
    server_name  localhost;

    root /home/user/ws/docker/jitan/src/html;
    index index.php index.html index.htm;

    #error_page  404              /404.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        try_files $uri @app;
    }

    location ~* \.php$ {
        proxy_pass http://backend;
    }

    location @app {
        proxy_pass http://backend;
    }

    location ~ /\.ht {
        deny  all;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;キャッシュプロキシ&#34;&gt;キャッシュプロキシ&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;http {
    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cachezone:60m max_size=1G inactive=7d;

    location ~* \.(html|css|jpg|gif|ico|js)$ {
        expires 1d;
        proxy_cache cachezone;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache_valid 200 301 302 1d;
        proxy_pass http://backend;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;キャッシュを削除する&lt;/p&gt;

&lt;p&gt;cssを含むリンクのみ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -lr &amp;quot;css&amp;quot; /var/cache/nginx/ | xargs rm -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;特定のリンク&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -lr &amp;quot;http://sample.com/&amp;quot; /var/cache/nginx/ | xargs rm -f
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;basic認証&#34;&gt;basic認証&lt;/h4&gt;

&lt;p&gt;htpasswdでパスワードファイルを作る&lt;/p&gt;

&lt;h5 id=&#34;centos7&#34;&gt;centos7&lt;/h5&gt;

&lt;p&gt;htpasswdをインストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install httpd-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ sudo htpasswd -c /etc/nginx/.htpasswd username&lt;br /&gt;
$ sudo vim /etc/nginx/conf.d/default.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auth_basic &amp;quot;好きなrealmを&amp;quot;;
auth_basic_ user_file /etc/nginx/.htpasswd;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git</title>
      <link>https://freks.jp/tips/git/</link>
      <pubDate>Sat, 04 Feb 2017 18:40:36 +0900</pubDate>
      
      <guid>https://freks.jp/tips/git/</guid>
      <description>

&lt;h1 id=&#34;tips&#34;&gt;tips&lt;/h1&gt;

&lt;p&gt;手元のブランチを削除する&lt;br /&gt;
$ git branch -d (sample)&lt;/p&gt;

&lt;p&gt;リモートリポジトリのブランチを削除する&lt;br /&gt;
$ git push origin :(sample)&lt;/p&gt;

&lt;p&gt;リモートリポジトリで削除されたブランチが手元で残っているとき削除する&lt;br /&gt;
$ git remote prune origin&lt;/p&gt;

&lt;h1 id=&#34;start-to-use-git&#34;&gt;start to use git&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name (name)
git config --global user.email (email address)
git config --global color.ui auto
git config --global alias.ch checkout
git config --global alias.co commit
git config --global alias.st status
git config --global alias.br=branch
git config --global core.quotepath off
git config --global core.editor vim
git config --global push.default=simple
git config --global commit.verbose=true
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;connect-bitbucket-using-name-changed-ssh-key-not-id-rsa&#34;&gt;connect bitbucket using name changed ssh key (not id_rsa)&lt;/h1&gt;

&lt;p&gt;prepare ssh key (ex. deploykey_rsa)&lt;br /&gt;
register ssh public key to bitbucket account or repository&lt;/p&gt;

&lt;p&gt;on server&lt;/p&gt;

&lt;p&gt;$ vi .ssh/config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host bitbucket
  HostName bitbucket.org
  User git
  IdentityFile ~/.ssh/deploykey_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;confirm&lt;/p&gt;

&lt;p&gt;$ ssh bitbucket&lt;/p&gt;

&lt;p&gt;link .ssh/config to git&lt;/p&gt;

&lt;p&gt;$ vim .gitconfig&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[url &amp;quot;bitbucket:&amp;quot;]
    InsteadOf = git@bitbucket.org:
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;use-gpg&#34;&gt;use gpg&lt;/h1&gt;

&lt;h2 id=&#34;on-ubuntu&#34;&gt;on ubuntu&lt;/h2&gt;

&lt;p&gt;gpg is installed by default&lt;br /&gt;
gpg2 is not installed by default&lt;br /&gt;
gpg2 is gpg v2&lt;/p&gt;

&lt;p&gt;refer to: &lt;a href=&#34;http://qiita.com/prince_0203/items/ef0e12f2f6d150ff0485&#34;&gt;GitHubでGPGにより署名されたcommitにバッジが表示されるようになったので設定してみる - Qiita&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-gpg-key&#34;&gt;create gpg key&lt;/h2&gt;

&lt;p&gt;$ gpg &amp;ndash;gen-key&lt;/p&gt;

&lt;p&gt;follow the instruction&lt;br /&gt;
wait for a long time&lt;/p&gt;

&lt;p&gt;$ gpg &amp;ndash;list-keys&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pub   4096R/xxxxxxxx 2016-04-10
uid           sample foobar &amp;lt;sample@sample.com&amp;gt;
sub   4096R/yyyyyyyy 2016-04-10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xxxxxxxx is the id&lt;/p&gt;

&lt;p&gt;show public key&lt;br /&gt;
$ gpg &amp;ndash;armor &amp;ndash;export コピーした鍵のID&lt;/p&gt;

&lt;p&gt;copy and paste in the github setting&lt;/p&gt;

&lt;p&gt;$ git config &amp;ndash;global gpg.program gpg&lt;br /&gt;
$ git config &amp;ndash;global user.signingkey コピーした鍵のID&lt;br /&gt;
$ git config &amp;ndash;global commit.gpgsign true&lt;/p&gt;

&lt;h2 id=&#34;copy-gpg-key&#34;&gt;copy gpg key&lt;/h2&gt;

&lt;p&gt;copy .gnupg directory&lt;br /&gt;
-&amp;gt; this didn&amp;rsquo;t work because git version was old&lt;/p&gt;

&lt;h1 id=&#34;change-gpg-passphrase&#34;&gt;change gpg passphrase&lt;/h1&gt;

&lt;p&gt;$ gpg &amp;ndash;edit-key (key id)&lt;br /&gt;
&amp;gt; passwd&lt;br /&gt;
&amp;gt; (input old passphrase and new passphrase)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ansible</title>
      <link>https://freks.jp/tips/ansible/</link>
      <pubDate>Sat, 04 Feb 2017 16:32:47 +0900</pubDate>
      
      <guid>https://freks.jp/tips/ansible/</guid>
      <description>

&lt;p&gt;sshでサーバーにつながるように準備しておく&lt;/p&gt;

&lt;h4 id=&#34;start&#34;&gt;start&lt;/h4&gt;

&lt;p&gt;create inventory file&lt;/p&gt;

&lt;p&gt;$ vim /etc/ansible/hosts (globalにansibleが認識)&lt;br /&gt;
or&lt;br /&gt;
$ vim hosts (local)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[servers]
sample
server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 servers are written&lt;br /&gt;
[xxxx] is a group name&lt;br /&gt;
server name is used in ssh/config&lt;/p&gt;

&lt;p&gt;$ ansible all -m ping&lt;br /&gt;
or&lt;br /&gt;
$ ansible servers -m ping&lt;br /&gt;
$ ansible sample -m ping&lt;/p&gt;

&lt;p&gt;sample is one server name&lt;br /&gt;
servers is a group name&lt;br /&gt;
ping is one module of ansible&lt;/p&gt;

&lt;p&gt;localの場合 -i で inventory file を指定&lt;br /&gt;
$ ansible all -i hosts -m ping&lt;/p&gt;

&lt;h4 id=&#34;to-vagrant&#34;&gt;to vagrant&lt;/h4&gt;

&lt;p&gt;set vagrant ssh to .ssh/config&lt;br /&gt;
$ vagrant ssh-config ansible &amp;gt;&amp;gt; ~/.ssh/config&lt;/p&gt;

&lt;p&gt;try ssh to vagrant&lt;br /&gt;
$ ssh ansible&lt;/p&gt;

&lt;h4 id=&#34;playbook&#34;&gt;playbook&lt;/h4&gt;

&lt;p&gt;check syntax&lt;br /&gt;
$ ansible-playbook sample.yml &amp;ndash;syntax-check&lt;/p&gt;

&lt;p&gt;implement&lt;br /&gt;
$ ansible-playbook -i hosts -t wp -K sample.yml&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-i set hosts&lt;/li&gt;
&lt;li&gt;-t set tag&lt;/li&gt;
&lt;li&gt;-K ask sudo password&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ssh</title>
      <link>https://freks.jp/tips/ssh/</link>
      <pubDate>Sat, 04 Feb 2017 15:00:30 +0900</pubDate>
      
      <guid>https://freks.jp/tips/ssh/</guid>
      <description>

&lt;p&gt;```&lt;/p&gt;

&lt;h4 id=&#34;ssh鍵生成&#34;&gt;ssh鍵生成&lt;/h4&gt;

&lt;p&gt;$ ssh-keygen -t rsa -b 4096 -C &amp;ldquo;your_email@example.com&amp;rdquo;&lt;br /&gt;
(ファイル名を指定)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sakura vps</title>
      <link>https://freks.jp/tips/sakuravps/</link>
      <pubDate>Sat, 04 Feb 2017 14:58:30 +0900</pubDate>
      
      <guid>https://freks.jp/tips/sakuravps/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://vps.sakura.ad.jp/&#34;&gt;VPS（仮想専用サーバー）｜さくらインターネット &lt;/a&gt;
を契約する&lt;/p&gt;

&lt;p&gt;管理画面へログイン、OSをインストールする&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Centos 7 64bit&lt;/li&gt;
&lt;li&gt;root パスワードを入力&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;初期設定リファレンス &lt;a href=&#34;https://help.sakura.ad.jp/hc/ja/articles/206208181&#34;&gt;【さくらのVPS】サーバの初期設定ガイド – さくらのサポート情報&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;ユーザー追加&#34;&gt;ユーザー追加&lt;/h4&gt;

&lt;p&gt;管理画面のコンソールでの作業&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ useradd user
$ passwd user
(enter password twice)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ユーザーにsudo追加&#34;&gt;ユーザーにsudo追加&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ usermod -G wheel user
$ visudo
%wheel ALL=(ALL) ALL を有効に
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;sshログイン&#34;&gt;sshログイン&lt;/h4&gt;

&lt;p&gt;ssh用の秘密鍵を生成しておく&lt;br /&gt;
公開鍵をサーバーへコピー&lt;/p&gt;

&lt;p&gt;rootユーサーでsshログイン&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir .ssh
$ chmod 700 .ssh
$ cat id_rsa.pub &amp;gt; .ssh/authorized_keys
$ chmod 600 .ssh/authorized_keys
$ rm -f id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sshサーバーの設定変更&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Port 22&lt;/li&gt;
&lt;li&gt;PermitRootLogin no&lt;/li&gt;
&lt;li&gt;PasswordAuthentication no&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Portはファイアーウォールの設定もあわせて変える&lt;/p&gt;

&lt;p&gt;ssh再起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart sshd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;firewalld設定&#34;&gt;firewalld設定&lt;/h4&gt;

&lt;p&gt;デーモン確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ firewall-cmd --list-services
$ sudo cat /usr/lib/firewalld/services/ssh.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SSHのポート番号変更&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /usr/lib/firewalld/services/ssh.xml
$ sudo vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サービス再起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart sshd.service
$ firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sshログの確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;journalctl -u sshd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;centos-update&#34;&gt;centos update&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;open-http-port-of-firewall&#34;&gt;open http port of firewall&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ sudo firewall-cmd --add-service=http --zone=public
$ sudo firewall-cmd --add-service=https --zone=public
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;git&#34;&gt;git&lt;/h4&gt;

&lt;p&gt;git was already installed&lt;br /&gt;
so do config&lt;/p&gt;

&lt;h4 id=&#34;nginx&#34;&gt;nginx&lt;/h4&gt;

&lt;p&gt;repository登録&lt;br /&gt;
$ vim /etc/yum.repos.d/nginx.repo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/7/$basearch/
gpgcheck=0
enabled=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;install&lt;br /&gt;
$ sudo yum -y &amp;ndash;enablerepo=nginx install nginx&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux command</title>
      <link>https://freks.jp/tips/linux-command/</link>
      <pubDate>Fri, 20 Jan 2017 13:06:40 +0900</pubDate>
      
      <guid>https://freks.jp/tips/linux-command/</guid>
      <description>

&lt;h4 id=&#34;delete-0-byte-file&#34;&gt;delete 0 byte file&lt;/h4&gt;

&lt;p&gt;$ find . -maxdepth 1 -size 0 -print | xargs rm&lt;/p&gt;

&lt;h4 id=&#34;さっきいたディレクトリに戻る&#34;&gt;さっきいたディレクトリに戻る&lt;/h4&gt;

&lt;p&gt;$ cd -&lt;/p&gt;

&lt;h4 id=&#34;文字化けしたファイル名を修正する&#34;&gt;文字化けしたファイル名を修正する&lt;/h4&gt;

&lt;p&gt;find . -maxdepth 1 -type f | xargs convmv -f sjis -t utf8&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eccube3</title>
      <link>https://freks.jp/tips/eccube3/</link>
      <pubDate>Mon, 16 Jan 2017 16:34:30 +0900</pubDate>
      
      <guid>https://freks.jp/tips/eccube3/</guid>
      <description>

&lt;h4 id=&#34;debug-mode&#34;&gt;debug mode&lt;/h4&gt;

&lt;p&gt;デバッグモード用のURLが用意されている&lt;br /&gt;
index_dev.phpを入れるとデバッグモード&lt;br /&gt;
&lt;a href=&#34;http://localhost/index_dev.php/sample/aaa&#34;&gt;http://localhost/index_dev.php/sample/aaa&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;plugin&#34;&gt;plugin&lt;/h4&gt;

&lt;p&gt;Customizeプラグインを作る場合&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Customize/
├── config.yml
├── Controller
│   ├── ConfigController.php
│   └── CustomizeController.php
├── event.yml
├── Form
│   └── Type
│       └── CustomizeConfigType.php
├── CustomizeEvent.php
├── LICENSE
├── PluginManager.php
├── Resource
│   └── template
│       ├── admin
│       │   └── config.twig
│       └── index.twig
└── ServiceProvider
    └── CustomizeServiceProvider.php
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;config.yml&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プラグインの定義、ServiceProviderやEventの登録&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ServiceProviderディレクトリ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メインロジック、ルーティングの設定やFormのセットなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;event.yml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フックポイントとEvent methodをつなげる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CustomizeEvent.php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;config.ymlにevent.ymlとつながるクラス名をセット&lt;br /&gt;
event.ymlとつなぐmethodを用意&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Controllerディレクトリ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コントローラーを設置&lt;/p&gt;

&lt;h4 id=&#34;clear-cache&#34;&gt;clear cache&lt;/h4&gt;

&lt;p&gt;キャッシュファイル削除&lt;br /&gt;
$ php app/console cache:clear&lt;/p&gt;

&lt;p&gt;セッション情報も含めて削除&lt;br /&gt;
$ php app/console cache:clear &amp;ndash;all&lt;/p&gt;

&lt;h4 id=&#34;doctrine&#34;&gt;doctrine&lt;/h4&gt;

&lt;p&gt;check and update&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/doctrine orm:schema-tool:update --dump-sql
./vendor/bin/doctrine orm:schema-tool:update --force
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;log&#34;&gt;log&lt;/h4&gt;

&lt;p&gt;see &lt;a href=&#34;http://ec-cube.github.io/guideline_log&#34;&gt;ログ出力設定 | EC-CUBE 開発ドキュメント&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu</title>
      <link>https://freks.jp/tips/ubuntu/</link>
      <pubDate>Mon, 16 Jan 2017 16:34:24 +0900</pubDate>
      
      <guid>https://freks.jp/tips/ubuntu/</guid>
      <description>

&lt;h4 id=&#34;windowを移動する&#34;&gt;Windowを移動する&lt;/h4&gt;

&lt;p&gt;ウィンドウが見えない場所へ移動してしまった時&lt;br /&gt;
Alt + F7&lt;/p&gt;

&lt;h4 id=&#34;androidと画面共有&#34;&gt;Androidと画面共有&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;use desktop sharing&lt;/li&gt;
&lt;li&gt;implement $ gsettings set org.gnome.Vino require-encryption false&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://kimamanilife.com/archives/459&#34;&gt;Ubuntu系Linuxに標準で入っているデスクトップ共有を試してみる | 気ままにライフ&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;デーモン起動&#34;&gt;デーモン起動&lt;/h4&gt;

&lt;p&gt;設定を確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sysv-rc-conf --list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ON or OFF&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sysv-rc-conf apache2 on
$ sysv-rc-conf apache2 off
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;repository削除&#34;&gt;repository削除&lt;/h4&gt;

&lt;p&gt;$ sudo add-apt-repository &amp;ndash;remove ppa:sample/xxx&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mysql</title>
      <link>https://freks.jp/tips/mysql/</link>
      <pubDate>Mon, 16 Jan 2017 16:19:13 +0900</pubDate>
      
      <guid>https://freks.jp/tips/mysql/</guid>
      <description>

&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;

&lt;p&gt;sudo apt-get install mysql-server&lt;br /&gt;
sudo apt-get install php5-mysql&lt;/p&gt;

&lt;p&gt;$ sudo vi/etc/mysql/my.cnfにあるので、viか何かで開いて、下記設定を追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[client]
default-character-set=utf8
[mysqld]
skip-character-set-client-handshake
character-set-server = utf8
collation-server = utf8_general_ci
init-connect = SET NAMES utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ sudo /etc/init.d/mysql restart&lt;br /&gt;
$ sudo mysql -u root -p&lt;br /&gt;
$ mysql&amp;gt; status&lt;br /&gt;
文字コードがuft8になっているか確認&lt;/p&gt;

&lt;h1 id=&#34;login&#34;&gt;login&lt;/h1&gt;

&lt;p&gt;mysql -u root -p&lt;/p&gt;

&lt;h1 id=&#34;backup&#34;&gt;backup&lt;/h1&gt;

&lt;p&gt;mysqldump -u root -p (database name) &amp;gt; dump&lt;/p&gt;

&lt;h1 id=&#34;restore&#34;&gt;restore&lt;/h1&gt;

&lt;p&gt;mysql -u root (database name) &amp;lt; dump&lt;/p&gt;

&lt;h1 id=&#34;create-user&#34;&gt;create user&lt;/h1&gt;

&lt;p&gt;GRANT ALL PRIVILEGES ON &lt;em&gt;.&lt;/em&gt; TO (user name)@localhost IDENTIFIED BY &amp;lsquo;password&amp;rsquo;;&lt;br /&gt;
FLUSH PRIVILEGES;&lt;/p&gt;

&lt;h1 id=&#34;delete-user&#34;&gt;delete user&lt;/h1&gt;

&lt;p&gt;DELETE FROM mysql.user WHERE user=&amp;lsquo;ユーザ名&amp;rsquo; AND host=&amp;lsquo;localhost&amp;rsquo;;&lt;br /&gt;
or&lt;br /&gt;
drop user sample@localhost;&lt;/p&gt;

&lt;h1 id=&#34;show-users&#34;&gt;show users&lt;/h1&gt;

&lt;p&gt;select user, host, password from mysql.user;&lt;/p&gt;

&lt;h1 id=&#34;create-database&#34;&gt;create database&lt;/h1&gt;

&lt;p&gt;CREATE DATABASE (database name) CHARACTER SET utf8;&lt;/p&gt;

&lt;h1 id=&#34;delete-database&#34;&gt;delete database&lt;/h1&gt;

&lt;p&gt;drop database sample;&lt;/p&gt;

&lt;h1 id=&#34;show-databases&#34;&gt;show databases&lt;/h1&gt;

&lt;p&gt;show databases;&lt;/p&gt;

&lt;h1 id=&#34;connect&#34;&gt;connect&lt;/h1&gt;

&lt;p&gt;mysql -u user -h hostname -P portnum -p (database name)&lt;/p&gt;

&lt;h1 id=&#34;avoid-truncate-foreign-key-error&#34;&gt;avoid truncate foreign key error&lt;/h1&gt;

&lt;p&gt;外部キー制約でテーブルにレコードがなくてもエラーが発生する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;truncate plg_owner;
ERROR 1701 (42000): Cannot truncate a table referenced in a foreign key constraint (`sample`.`d_owner_job`, CONSTRAINT `FK_FAD08FB17E3C61F9` FOREIGN KEY (`owner_id`) REFERENCES `sample`.`d_owner` (`owner_id`))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一時的に外部キー参照チェックをOFFしてtruncateする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set foreign_key_checks = 0;
truncate some_table;
set foreign_key_checks = 1;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>apache</title>
      <link>https://freks.jp/tips/apache/</link>
      <pubDate>Mon, 26 Dec 2016 19:23:04 +0900</pubDate>
      
      <guid>https://freks.jp/tips/apache/</guid>
      <description>

&lt;h4 id=&#34;confの文法チェック&#34;&gt;confの文法チェック&lt;/h4&gt;

&lt;p&gt;$ apachectl configtest&lt;/p&gt;

&lt;h4 id=&#34;サブディレクトリへのアクセスログを分ける&#34;&gt;サブディレクトリへのアクセスログを分ける&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;SetEnvIf Request_URI &amp;quot;/sample/&amp;quot; sample
CustomLog &amp;quot;logs/access_log&amp;quot; combined env=!sample
CustomLog &amp;quot;logs/sample-access_log&amp;quot; combined env=print
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>